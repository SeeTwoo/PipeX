struct s_args
{
	char	**paths;			//holds the split PATH variable
	char	**command;			//holds the command to send execve
	int		*fds;				//holds the infile, pipes fds and outfile in logical order
	int		*pids;				//holds the pids so we can wait for them at the end
};

main
|	create fds
|		open infile	
|		open outfile
|		create pipes
|		all of them in an array
|
|	parsing
|		get the path variable
|		split it
|
|	exec
|	|	while (there are fds in the array)
|	|	|	fork
|	|	|	exec a command in the child process (needs the av field, the fds and the split PATH
|	|	|	|	split the string with the command and its arguments
|	|	|	|	find the path to the command using the first field and the split path



cat             grep          wc -l

   	      pipe1         pipe2

infile   in | out      in | out     outfile
